{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Project\\\\bank_front\\\\src\\\\componets\\\\Transfer\\\\Transfer.js\",\n  _s = $RefreshSig$();\nimport '../../App.css';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Transfer({\n  sessionCookie\n}) {\n  _s();\n  const [accountIds, setAccountIds] = useState([]);\n  const [selectedAccountId, setSelectedAccountId] = useState(\"\");\n  const [receiverAccountId, setReceiverAccountId] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n  const [balance, setBalance] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const fetchData = async () => {\n    const response = await axios.get('http://localhost:8080/back_bank/getAccountsByUserAndType.do', {\n      params: {\n        accountType: \"inout\",\n        JSESSIONID: sessionCookie\n      }\n    });\n    const ids = [];\n    for (const account of response.data) {\n      ids.push(account[\"number\"]);\n    }\n    setAccountIds(ids);\n    setSelectedAccountId(ids[0]);\n  };\n  const handleTransfer = async () => {\n    try {\n      const response = await axios.get('http://localhost:8080/back_bank/transferMoney.do', {\n        params: {\n          fromAccountId: selectedAccountId,\n          toAccountId: receiverAccountId,\n          amount: amount,\n          JSESSIONID: sessionCookie\n        }\n      });\n      if (response.status == 200) {\n        setMessage(\"이체완료\");\n        setShowModal(true);\n      } else {\n        setShowModal(true);\n        setMessage(\"이체실패\" + response.data.message);\n      }\n    } catch (error) {\n      setShowModal(true);\n      setMessage('서버 에러: ' + error.message);\n    }\n  };\n  const fetchBalance = async () => {\n    try {\n      console.log(\"현재 선택:\", selectedAccountId);\n      // 임시로 사용하는 API URL입니다. 실제 URL로 변경해주세요.\n      const response = await axios.get('http://localhost:8080/back_bank/getAccountBalance.do', {\n        params: {\n          accountId: selectedAccountId,\n          JSESSIONID: sessionCookie\n        }\n      });\n      setBalance(response.data);\n    } catch (error) {\n      alert('잔액 조회 실패: ' + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (selectedAccountId != \"\") {\n      fetchBalance();\n    }\n  }, [selectedAccountId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-container \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectdiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uACC4\\uC88C \\uC120\\uD0DD \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedAccountId,\n          onChange: e => setSelectedAccountId(e.target.value),\n          children: accountIds.map(id => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: id,\n            children: id\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 35\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACC4\\uC88C \\uC794\\uC561: \", balance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC774\\uCCB4\\uD560 \\uACC4\\uC88C \\uBC88\\uD638\",\n          value: receiverAccountId,\n          onChange: e => setReceiverAccountId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"\\uC774\\uCCB4 \\uAE08\\uC561\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleTransfer,\n        children: \"\\uC774\\uCCB4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ConfirmModal, {\n        message: message,\n        onClose: () => setShowModal(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n_s(Transfer, \"DBO+JOy9p4oRSUrEtwiKl1tfMjQ=\");\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["useEffect","useState","axios","ConfirmModal","jsxDEV","_jsxDEV","Transfer","sessionCookie","_s","accountIds","setAccountIds","selectedAccountId","setSelectedAccountId","receiverAccountId","setReceiverAccountId","amount","setAmount","balance","setBalance","message","setMessage","showModal","setShowModal","fetchData","response","get","params","accountType","JSESSIONID","ids","account","data","push","handleTransfer","fromAccountId","toAccountId","status","error","fetchBalance","console","log","accountId","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","id","type","placeholder","onClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/Project/bank_front/src/componets/Transfer/Transfer.js"],"sourcesContent":["import '../../App.css';\r\nimport { useEffect, useState } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nimport ConfirmModal from '../ConfirmModal/ConfirmModal';\r\n\r\nfunction Transfer({sessionCookie }) {\r\n\r\n    const [accountIds, setAccountIds] = useState([]);\r\n    const [selectedAccountId, setSelectedAccountId] = useState(\"\");\r\n    const [receiverAccountId, setReceiverAccountId] = useState(\"\");\r\n    const [amount, setAmount] = useState(0);\r\n    const [balance, setBalance] = useState(null);\r\n  \r\n    const [message, setMessage] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n  \r\n  \r\n    const fetchData = async () => {\r\n  \r\n      const response = await axios.get('http://localhost:8080/back_bank/getAccountsByUserAndType.do', {\r\n          params: {\r\n            accountType: \"inout\",\r\n            JSESSIONID: sessionCookie\r\n          }\r\n        });\r\n  \r\n      const ids = [];\r\n      for (const account of response.data){\r\n        ids.push(account[\"number\"])\r\n      }\r\n      setAccountIds(ids)\r\n      setSelectedAccountId(ids[0]);\r\n    };\r\n  \r\n    const handleTransfer = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/back_bank/transferMoney.do', {\r\n          params:{\r\n            fromAccountId: selectedAccountId,\r\n            toAccountId: receiverAccountId,\r\n            amount: amount,\r\n            JSESSIONID: sessionCookie\r\n          }\r\n        });\r\n        if(response.status == 200) {\r\n          setMessage(\"이체완료\")\r\n          setShowModal(true);\r\n        } else {\r\n          setShowModal(true);\r\n          setMessage(\"이체실패\" + response.data.message)\r\n        }\r\n      } catch (error) {\r\n        setShowModal(true);\r\n        setMessage('서버 에러: ' + error.message);\r\n      }\r\n    };\r\n  \r\n    const fetchBalance = async () => {\r\n      try {\r\n        console.log(\"현재 선택:\", selectedAccountId)\r\n        // 임시로 사용하는 API URL입니다. 실제 URL로 변경해주세요.\r\n        const response = await axios.get('http://localhost:8080/back_bank/getAccountBalance.do',\r\n        {\r\n          params: {\r\n            accountId: selectedAccountId,\r\n            JSESSIONID: sessionCookie\r\n          }\r\n        });\r\n  \r\n        setBalance(response.data);\r\n      } catch (error) {\r\n        alert('잔액 조회 실패: ' + error.message);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      fetchData();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      \r\n      if(selectedAccountId != \"\"){\r\n        fetchBalance();\r\n      }\r\n    }, [selectedAccountId]);\r\n  \r\n    return (\r\n      <div className='center'>\r\n      <div className='deposit-container '>\r\n       \r\n        <div className='selectdiv'>\r\n          <label>계좌 선택 </label>\r\n          <select value={selectedAccountId} onChange={e => setSelectedAccountId(e.target.value)}>\r\n            {accountIds.map(id => <option key={id} value={id}>{id}</option>)}\r\n          </select>\r\n        </div>\r\n  \r\n        <p>계좌 잔액: {balance}</p>\r\n  \r\n        <div>\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"이체할 계좌 번호\" \r\n            value={receiverAccountId} \r\n            onChange={e => setReceiverAccountId(e.target.value)} \r\n          />\r\n        </div>\r\n  \r\n        <div>\r\n          <input \r\n            type=\"number\" \r\n            placeholder=\"이체 금액\" \r\n            value={amount} \r\n            onChange={e => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n  \r\n        <button className='submit-button' onClick={handleTransfer}>이체</button>\r\n  \r\n  \r\n        {showModal && <ConfirmModal message={message} onClose={() => setShowModal(false)} />}\r\n  \r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default Transfer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}